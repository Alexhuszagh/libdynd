//
// Copyright (C) 2011-14 Irwin Zaid, DyND Developers
// BSD 2-Clause License, see LICENSE.txt
//

#ifndef _DYND__SPECIAL_VALS_HPP_
#define _DYND__SPECIAL_VALS_HPP_

#include <dynd/array.hpp>

namespace dynd {

inline nd::array bessel_j0_vals() {
    static double x[21] = {-5.0E+00, -4.0E+00, -3.0E+00, -2.0E+00, -1.0E+00, 0.0E+00,
        1.0E+00, 2.0E+00, 3.0E+00, 4.0E+00, 5.0E+00, 6.0E+00, 7.0E+00, 8.0E+00, 9.0E+00,
        10.0E+00, 11.0E+00, 12.0E+00, 13.0E+00, 14.0E+00, 15.0E+00};
    static double j0[21] = {-0.1775967713143383E+00, -0.3971498098638474E+00, -0.2600519549019334E+00,
        0.2238907791412357E+00, 0.7651976865579666E+00, 0.1000000000000000E+01, 0.7651976865579666E+00,
        0.2238907791412357E+00, -0.2600519549019334E+00, -0.3971498098638474E+00, -0.1775967713143383E+00,
        0.1506452572509969E+00, 0.3000792705195556E+00, 0.1716508071375539E+00, -0.9033361118287613E-01,
        -0.2459357644513483E+00, -0.1711903004071961E+00, 0.4768931079683354E-01, 0.2069261023770678E+00,
        0.1710734761104587E+00, -0.1422447282678077E-01};

    nd::array vals = nd::make_strided_array(2, 21, dynd::ndt::make_type<double>());
    vals(0).vals() = x;
    vals(1).vals() = j0;

    return vals;
}

inline nd::array bessel_j1_vals() {
    static double x[21] = {-5.0E+00, -4.0E+00, -3.0E+00, -2.0E+00, -1.0E+00, 0.0E+00,
        1.0E+00, 2.0E+00, 3.0E+00, 4.0E+00, 5.0E+00, 6.0E+00, 7.0E+00, 8.0E+00, 9.0E+00,
        10.0E+00, 11.0E+00, 12.0E+00, 13.0E+00, 14.0E+00, 15.0E+00};
    static double j1[21] = {0.3275791375914652E+00, 0.6604332802354914E-01, -0.3390589585259365E+00,
        -0.5767248077568734E+00, -0.4400505857449335E+00, 0.0000000000000000E+00, 0.4400505857449335E+00,
        0.5767248077568734E+00, 0.3390589585259365E+00, -0.6604332802354914E-01, -0.3275791375914652E+00,
        -0.2766838581275656E+00, -0.4682823482345833E-02, 0.2346363468539146E+00, 0.2453117865733253E+00,
        0.4347274616886144E-01, -0.1767852989567215E+00, -0.2234471044906276E+00, -0.7031805212177837E-01,
        0.1333751546987933E+00, 0.2051040386135228E+00};

    nd::array vals = nd::make_strided_array(2, 21, dynd::ndt::make_type<double>());
    vals(0).vals() = x;
    vals(1).vals() = j1;

    return vals;
}

template <typename T>
nd::array bessel_j_vals();

template <>
inline nd::array bessel_j_vals<int>() {
    static int n[20] = {2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10,
        20, 20, 20, 20, 20};
    static double x[20] = {1.0E+00, 2.0E+00, 5.0E+00, 10.0E+00, 50.0E+00, 1.0E+00,
        2.0E+00, 5.0E+00, 10.0E+00, 50.0E+00, 1.0E+00, 2.0E+00, 5.0E+00, 10.0E+00,
        50.0E+00, 1.0E+00, 2.0E+00, 5.0E+00, 10.0E+00, 50.0E+00};
    static double j[20] = {0.1149034849319005E+00, 0.3528340286156377E+00, 0.4656511627775222E-01,
        0.2546303136851206E+00, -0.5971280079425882E-01, 0.2497577302112344E-03,
        0.7039629755871685E-02, 0.2611405461201701E+00, -0.2340615281867936E+00,
        -0.8140024769656964E-01, 0.2630615123687453E-09, 0.2515386282716737E-06,
        0.1467802647310474E-02, 0.2074861066333589E+00, -0.1138478491494694E+00,
        0.3873503008524658E-24, 0.3918972805090754E-18, 0.2770330052128942E-10,
        0.1151336924781340E-04, -0.1167043527595797E+00};

    nd::array vals = nd::make_strided_array(3, 20, dynd::ndt::make_type<double>());
    vals(0).vals() = n;
    vals(1).vals() = x;
    vals(2).vals() = j;

    return vals;
}

template <>
inline nd::array bessel_j_vals<double>() {
    static double nu[28] = {0.50E+00, 0.50E+00, 0.50E+00, 0.50E+00, 0.50E+00, 0.50E+00,
        0.50E+00, 0.50E+00, 1.50E+00, 1.50E+00, 1.50E+00, 1.50E+00, 1.50E+00, 2.50E+00,
        2.50E+00, 2.50E+00, 2.50E+00, 2.50E+00, 1.25E+00, 1.25E+00, 1.25E+00, 1.25E+00,
        1.25E+00, 2.75E+00, 2.75E+00, 2.75E+00, 2.75E+00, 2.75E+00};
    static double x[28] = {0.2E+00, 1.0E+00, 2.0E+00, 2.5E+00, 3.0E+00, 5.0E+00,
        10.0E+00, 20.0E+00, 1.0E+00, 2.0E+00, 5.0E+00, 10.0E+00, 50.0E+00, 1.0E+00,
        2.0E+00, 5.0E+00, 10.0E+00, 50.0E+00, 1.0E+00, 2.0E+00, 5.0E+00, 10.0E+00,
        50.0E+00, 1.0E+00, 2.0E+00, 5.0E+00, 10.0E+00, 50.0E+00};
    static double j[28] = {0.3544507442114011E+00, 0.6713967071418031E+00, 0.5130161365618278E+00,
        0.3020049060623657E+00, 0.06500818287737578E+00, -0.3421679847981618E+00,
       -0.1372637357550505E+00, 0.1628807638550299E+00, 0.2402978391234270E+00,
        0.4912937786871623E+00, -0.1696513061447408E+00, 0.1979824927558931E+00,
       -0.1094768729883180E+00, 0.04949681022847794E+00, 0.2239245314689158E+00,
        0.2403772011113174E+00, 0.1966584835818184E+00, 0.02303721950962553E+00,
        0.3314145508558904E+00, 0.5461734240402840E+00, -0.2616584152094124E+00,
        0.1296035513791289E+00, -0.1117432171933552E+00, 0.03142623570527935E+00,
        0.1717922192746527E+00, 0.3126634069544786E+00, 0.1340289119304364E+00,
        0.06235967135106445E+00};

    nd::array vals = nd::make_strided_array(3, 28, dynd::ndt::make_type<double>());
    vals(0).vals() = nu;
    vals(1).vals() = x;
    vals(2).vals() = j;

    return vals;
}

inline nd::array bessel_y0_vals() {
    static double x[16] = {0.1E+00, 1.0E+00, 2.0E+00, 3.0E+00, 4.0E+00, 5.0E+00, 6.0E+00,
        7.0E+00, 8.0E+00, 9.0E+00, 10.0E+00, 11.0E+00, 12.0E+00, 13.0E+00, 14.0E+00, 15.0E+00};
    static double y0[16] = {-0.1534238651350367E+01, 0.8825696421567696E-01, 0.5103756726497451E+00,
        0.3768500100127904E+00, -0.1694073932506499E-01, -0.3085176252490338E+00, -0.2881946839815792E+00,
        -0.2594974396720926E-01, 0.2235214893875662E+00, 0.2499366982850247E+00, 0.5567116728359939E-01,
        -0.1688473238920795E+00, -0.2252373126343614E+00, -0.7820786452787591E-01, 0.1271925685821837E+00,
        0.2054642960389183E+00};

    nd::array vals = nd::make_strided_array(2, 16, dynd::ndt::make_type<double>());
    vals(0).vals() = x;
    vals(1).vals() = y0;

    return vals;
}

inline nd::array bessel_y1_vals() {
    static double x[16] = {0.1E+00, 1.0E+00, 2.0E+00, 3.0E+00, 4.0E+00, 5.0E+00, 6.0E+00,
        7.0E+00, 8.0E+00, 9.0E+00, 10.0E+00, 11.0E+00, 12.0E+00, 13.0E+00, 14.0E+00, 15.0E+00};
    static double y1[16] = {-0.6458951094702027E+01, -0.7812128213002887E+00, -0.1070324315409375E+00,
        0.3246744247918000E+00, 0.3979257105571000E+00, 0.1478631433912268E+00, -0.1750103443003983E+00,
        -0.3026672370241849E+00, -0.1580604617312475E+00, 0.1043145751967159E+00, 0.2490154242069539E+00,
        0.1637055374149429E+00, -0.5709921826089652E-01, -0.2100814084206935E+00, -0.1666448418561723E+00,
        0.2107362803687351E-01};

    nd::array vals = nd::make_strided_array(2, 16, dynd::ndt::make_type<double>());
    vals(0).vals() = x;
    vals(1).vals() = y1;

    return vals;
}

template <typename T>
nd::array bessel_y_vals();

template <>
inline nd::array bessel_y_vals<int>() {
    static int n[20] = {2, 2, 2, 2, 2, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20};
    static double x[20] = {1.0E+00, 2.0E+00, 5.0E+00, 10.0E+00, 50.0E+00, 1.0E+00,
        2.0E+00, 5.0E+00, 10.0E+00, 50.0E+00, 1.0E+00, 2.0E+00, 5.0E+00, 10.0E+00,
        50.0E+00, 1.0E+00, 2.0E+00, 5.0E+00, 10.0E+00, 50.0E+00};
    static double y[20] = {-0.1650682606816254E+01, -0.6174081041906827E+00, 0.3676628826055245E+00,
        -0.5868082442208615E-02, 0.9579316872759649E-01, -0.2604058666258122E+03, -0.9935989128481975E+01,
        -0.4536948224911019E+00, 0.1354030476893623E+00, -0.7854841391308165E-01, -0.1216180142786892E+09,
        -0.1291845422080393E+06, -0.2512911009561010E+02, -0.3598141521834027E+00, 0.5723897182053514E-02,
        -0.4113970314835505E+23, -0.4081651388998367E+17, -0.5933965296914321E+09, -0.1597483848269626E+04,
        0.1644263394811578E-01};

    nd::array vals = nd::make_strided_array(3, 20, dynd::ndt::make_type<double>());
    vals(0).vals() = n;
    vals(1).vals() = x;
    vals(2).vals() = y;

    return vals;
}

template <>
inline nd::array bessel_y_vals<double>() {
    static double nu[28] = {0.50E+00, 0.50E+00, 0.50E+00, 0.50E+00, 0.50E+00, 0.50E+00,
        0.50E+00, 0.50E+00, 1.50E+00, 1.50E+00, 1.50E+00, 1.50E+00, 1.50E+00, 2.50E+00,
        2.50E+00, 2.50E+00, 2.50E+00, 2.50E+00, 1.25E+00, 1.25E+00, 1.25E+00, 1.25E+00,
        1.25E+00, 2.75E+00, 2.75E+00, 2.75E+00, 2.75E+00, 2.75E+00};
    static double x[28] = {0.2E+00, 1.0E+00, 2.0E+00, 2.5E+00, 3.0E+00, 5.0E+00, 10.0E+00,
        20.0E+00, 1.0E+00, 2.0E+00, 5.0E+00, 10.0E+00, 50.0E+00, 1.0E+00, 2.0E+00, 5.0E+00,
        10.0E+00, 50.0E+00, 1.0E+00, 2.0E+00, 5.0E+00, 10.0E+00, 50.0E+00, 1.0E+00, 2.0E+00,
        5.0E+00, 10.0E+00, 50.0E+00};
    static double y[28] = {-1.748560416961876E+00, -0.4310988680183761E+00, 0.2347857104062485E+00,
        0.4042783022390569E+00, 0.4560488207946332E+00, -0.1012177091851084E+00, 0.2117088663313982E+00,
        -0.07280690478506185E+00, -1.102495575160179E+00, -0.3956232813587035E+00, 0.3219244429611401E+00,
        0.1584346223881903E+00, 0.02742813676191382E+00, -2.876387857462161E+00, -0.8282206324443037E+00,
        0.2943723749617925E+00, -0.1641784796149411E+00, 0.1105304445562544E+00, -0.9319659251969881E+00,
        -0.2609445010948933E+00, 0.2492796362185881E+00, 0.2174410301416733E+00, -0.01578576650557229E+00,
        -4.023453301501028E+00, -0.9588998694752389E+00, 0.2264260361047367E+00, -0.2193617736566760E+00,
        0.09413988344515077E+00};

    nd::array vals = nd::make_strided_array(3, 28, dynd::ndt::make_type<double>());
    vals(0).vals() = nu;
    vals(1).vals() = x;
    vals(2).vals() = y;

    return vals;
}

} // namespace dynd

#endif // _DYND__SPECIAL_VALS_HPP_
