language: cpp

sudo: false

matrix:
  include:
    - compiler: gcc
      env: VALGRIND=ON DYND_CUDA=OFF DYND_FFTW=OFF
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - kalakris-cmake
          packages:
          - gcc-4.7
          - g++-4.7
          - cmake
          - valgrind
    - compiler: gcc
      env: DYND_CUDA=OFF DYND_FFTW=ON
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - kalakris-cmake
          packages:
          - gcc-4.7
          - g++-4.7
          - cmake
          - libfftw3-dev
    - compiler: clang
      env: VALGRIND=ON DYND_CUDA=OFF DYND_FFTW=OFF
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - kalakris-cmake
          packages:
          - g++-4.7
          - cmake
          - valgrind
    - compiler: clang
      env: DYND_CUDA=OFF DYND_FFTW=ON
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - kalakris-cmake
          packages:
          - g++-4.7
          - cmake
          - libfftw3-dev
    - compiler: clang
      env: ASAN=ON DYND_CUDA=OFF DYND_FFTW=ON
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - kalakris-cmake
          packages:
          - g++-4.7
          - cmake
          - libfftw3-dev

before_script:
  - if [ "$CC" = "gcc" ]; then export CC="gcc-4.7"; fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.7"; fi
  - if [ "$ASAN" == "ON" ]; then export CXXFLAGS='-fsanitize=address -fno-omit-frame-pointer'; fi
  - if [ "$DYND_BUILD_TESTS" == "" ]; then export DYND_BUILD_TESTS=ON; fi
  - if [ "$DYND_BUILD_BENCHMARKS" == "" ]; then export DYND_BUILD_BENCHMARKS=ON; fi
  - mkdir build
  - pushd build
  - cmake $(if [ $DYND_CUDA = ON ]; then echo -DCMAKE_BUILD_TYPE=RelWithDebInfo; fi) -DDYND_CUDA=${DYND_CUDA} -DDYND_FFTW=${DYND_FFTW} -DDYND_BUILD_TESTS=${DYND_BUILD_TESTS} -DDYND_BUILD_BENCHMARKS=${DYND_BUILD_BENCHMARKS} ..

script:
  - make || exit 1
  - if [ "$DYND_CUDA" == "ON" ]; then exit; fi
  - if [ "$DYND_BUILD_TESTS" == "ON" ]; then ./tests/test_libdynd; fi
  - if [ "$VALGRIND" == "ON" ]; then valgrind --tool=memcheck --leak-check=yes --show-reachable=yes --error-exitcode=123 ./tests/test_libdynd; fi

notifications:
  email: false
  flowdock: b08b3ba4fb86fa48121e90b5f67ccb75
  on_success: "change"
  on_failure: "always"
